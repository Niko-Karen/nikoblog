<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>杂谈·关于SCP基金会被禁这档子事</title>
      <link href="/article/491b90e5/"/>
      <url>/article/491b90e5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今日我等若冷眼旁观，他日祸临己身，则无人为我摇旗呐喊。</p><footer><strong>鲁迅</strong></footer></blockquote><details class="folding-tag" ><summary> 关于 SCP 基金会 </summary>              <div class='content'>              <p><strong>以下摘自<a href="https://zh.moegirl.org.cn/SCP%E5%9F%BA%E9%87%91%E4%BC%9A">萌娘百科</a></strong></p><p><strong>SCP基金会</strong>（Special Containment Procedures Foundation）是一个虚构的全球性超自然事物调查管理组织。</p><h3 id="使命宣言"><a href="#使命宣言" class="headerlink" title="使命宣言"></a>使命宣言</h3><p>于世界各地的暗处活动，基金会的目标是收容异常物品，个体及现象，而且其本身运作不受各个主要国家政府的司法管辖权，授权和委托的干扰。这些异常透过物理或心理危害对全球安全造成显著威胁。</p><p>基金会维持常态，从而使世界各地的平民得以生存并免受恐惧，不信或对个人信念的怀疑的影响，并从地外、异次元和外层空间的影响中维持人类的独立自主。</p><p>我们的任务有三方面：</p><ol><li><p>控制<br>基金会控制异常以防止它们落入平民或敌对组织手中，透过广泛观察及监测并采取行动尽早拦截它们。</p></li><li><p>收容<br>基金会收容异常以防止它们的影响或效应散播，通过迁移，掩饰，或拆除它们或通过抑制或阻止公众传播它们的知识进行。</p></li><li><p>保护<br>基金会保护人类免受异常的影响并保护异常本身直至它们被完全理解以及出现自它们的特性及行为上制定的新科学定理为止。如果异常被收容时被判定为过度危险，基金会或也会以将异常无效化或摧毁作为最后手段。</p></li></ol>              </div>            </details><p>2021的某一天，我上百度搜索’SCP基金会官网’时，发现出现的并不是像平常一样的官网结果，而是像下面这样的‘儿童邪典’字样。</p><p><img src="SrcPic_220326_132515.png" alt="百度的结果"></p><p>我觉得奇怪，点进中国网那个链接去看，<a href="http://news.china.com.cn/2021-06/02/content_77543659.htm">戳这</a>。</p><p>文章很长，主要讲得就是各种SCPs怎么怎么污染儿童心灵，如何bl，sq，不仅仅是SCPs们的锅，还有类似 “女性做手术”的外科游戏，如何xx，sw。</p><p>确实，这些东西不适合非成年人观看，但是，为何要把SCP所有的东西都一并清除呢？他们说B站上的视频容易让未成年人看到，就全删了。为啥啊，B站明明有未成年模式，更何况家长不将手机给孩子玩、或者把B站等应用在给孩子前先“应用限时”啊。明明有解决办法，但不少家长依旧将SCP基金会举报了，而基金会也消失在我们的视线中。</p><blockquote><p>起初家长们疯狂举报虹猫蓝兔，我没有说话，因为我不看虹猫蓝兔；接着他们举报喜羊羊，我没有说话，因为我不看喜羊羊；后来他们举报了十万个冷笑话，我没有说话，因为我不看十万个冷笑话；后来他们举报了心跳文学部，我没有说话，因为我不玩心跳文学部；如今他们冲SCP基金会而来，我却发现再也没有人为我说话了。</p><footer><strong>雷霆之怒</strong><cite>萌娘百科评论</cite></footer></blockquote><p>除了SCP基金会，还有《查理九世》、《超级飞侠》、《虹猫蓝兔》等等诸多的书籍和动画片都被“家长们”举报。甚至连《超级飞侠》也被封杀了，我的妹妹小时候很喜欢看这部动画片，因为可以了解更多国家的历史、文化，看看他乡的风景，但家长们却以崇洋媚外为由封禁了这部动画，我妹妹吵着要看，但却在各大视频网站消失了。</p><p>到了现在，情况缓和了许多，用必应搜索基金会可以看到官网，在爱奇艺上也可以搜到超级飞侠，甚至还能看到新出的11季。</p><p>虽然放松很多了，但并不能代表将来没有更多的动画、虚构物等被举报。在这，我希望各大家长们说：<strong>“为了孩子，这样做是正确的，但也不能反应过度，不能因为单纯的‘为孩子好’就将SCP彻底封杀，还有许多成年人热爱这个社区，为这些社区做贡献。”</strong></p><div class="tip "><p><span class='p center logo large'><strong>声明</strong></span><br><span class='p center small'>仅代表个人观点，如有错误，请在评论区指出，个人会更正。如有不妥，请联系删除</span></p></div>]]></content>
      
      
      <categories>
          
          <category> 🚁无限边疆号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📖杂谈 </tag>
            
            <tag> ⭐️评价 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Twikoo加个邮箱提醒</title>
      <link href="/article/6508a98a/"/>
      <url>/article/6508a98a/</url>
      
        <content type="html"><![CDATA[<details class="folding-tag" ><summary> 跳坑原因 </summary>              <div class='content'>              <p>我还真没想明白我为什么要这样做<del>(就一个白痴</del>，不过也是快开学了，一开学我就没有时间折腾博客了，乘着精力旺盛再折腾下呗~</p>              </div>            </details><h2 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h2><p>在Twikoo的开源文档中(<a href="https://twikoo.js.org/faq.html#收不到提醒邮件">戳这里</a>),你可以看到，<code>使用Vercel部署的云函数，请配置国外的邮件服务商</code>，关键词:<strong>国外</strong>。所以免费部署在Vercel上的小伙伴们折腾时不要跳坑，要配置<strong>国外的服务商</strong>，这里建议<code>Zoho国际版</code>和<code>Gmail</code>(Gmail没试过，大家可以自己摸索)。本文主要讲Zoho国际版。</p><h2 id="开始！"><a href="#开始！" class="headerlink" title="开始！"></a>开始！</h2><ol><li>打开Zoho的<a href="https://mail.zoho.com/signup?type=org&amp;plan=free">国际版登陆界面</a>，登录详见下图。<br><img src="signup.webp" alt="Zoho主页"></li><li>登录后会进入邮箱配置页，你要先拥有自己的域名才能继续（毕竟是企业邮箱嘛。你会看到这样。<br><img src="set.png" alt="邮箱配置页"></li><li>按照它的操作一步一步做，依靠我依稀的记忆写个Tips。<div class="tip "><p><strong>设置用户</strong>: 随便配置一个你喜欢的名字，我就简单写了个<strong>niko</strong>，我的企业邮就是<code>niko@nikoblog.top</code><br><strong>设置组</strong>: 这玩意没什么实质意义，可以跳过。<br><strong>DNS映射</strong>: 按照他的要求增加TXT或MX的DNS记录，等会给你们张图看看我的DNSPOD。<br><strong>电子邮件迁移</strong>: 无必要，如果你要从其他邮箱迁移过来也行，自己折腾吧。<del>不负责任的态度</del></p></div>如果是腾讯云买的域名可以看我的DNS记录，下图。<br><img src="dnspod.png" alt="我的腾讯云DNSPOD"></li></ol><h2 id="网站Twikoo配置"><a href="#网站Twikoo配置" class="headerlink" title="网站Twikoo配置"></a>网站Twikoo配置</h2><p>打开你的网站随意一篇文章，下滑到Twikoo评论那，打开设置-&gt;输密码-&gt;进入<code>配置管理</code>-&gt;打开<code>邮件通知</code>菜单，看下图。<br><img src="ft.png" alt="配置1"><br>PS: <code>SENDER_EMAIL</code>是之前设置的邮箱，忘了的话见下图。<br><img src="psf.png" alt="找回遗失的邮箱(doge"></p><p>回到你的网站Twikoo配置页面，下滑接着看。<br><img src="st.webp" alt="配置2"></p><p>再下滑，看到<code>MAIL_TEMPLATE</code>一设置项，可以直接复制我的。感谢Guole大佬！<a href="https://guole.fun/posts/62740/">原文地址</a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;isForwardContent&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;         background: white;         width: 95%;         max-width: 800px;         margin: auto auto;         border-radius: 5px;         border: #49b1f5 1px solid;         overflow: hidden;         -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);         box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);       &quot;</span>&gt;</span><span class="tag">&lt;<span class="name">header</span> <span class="attr">style</span>=<span class="string">&quot;overflow: hidden&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.guole.fun/img/bg.min.jpg&quot;</span><span class="attr">style</span>=<span class="string">&quot;width: 100%; z-index: 666&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 5px 20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dear&quot;</span><span class="attr">style</span>=<span class="string">&quot;             position: relative;             color: white;             float: left;             z-index: 999;             background: #49b1f5;             padding: 5px 30px;             margin: -25px auto 0;             box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3);           &quot;</span>&gt;</span>Dear $&#123;PARENT_NICK&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>来自<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="symbol">&amp;nbsp;</span>的回复<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">style</span>=<span class="string">&quot;width:200px;border:0;border-bottom:1px solid #e5e5e5;margin:12px auto;&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;POST_URL&#125;&quot;</span><span class="attr">style</span>=<span class="string">&quot;text-decoration: none; color: #49b1f5&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span>$&#123;SITE_NAME&#125;<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>上发表的评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tk-content&quot;</span><span class="attr">style</span>=<span class="string">&quot; border-bottom: #ddd 1px solid; border-left: #ddd 1px solid; padding-bottom: 20px; background-color: #eee; margin: 15px 0px; padding-left: 20px; padding-right: 20px; border-top: #ddd 1px solid; border-right: #ddd 1px solid;  padding-top: 20px;&quot;</span>&gt;</span>$&#123;PARENT_COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="symbol">&amp;nbsp;</span>给您回复啦：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tk-content&quot;</span><span class="attr">style</span>=<span class="string">&quot; border-bottom: #ddd 1px solid; border-left: #ddd 1px solid; padding-bottom: 20px; background-color: #eee;  margin: 15px 0px;  padding-left: 20px; padding-right: 20px; border-top: #ddd 1px solid; border-right: #ddd 1px solid; padding-top: 20px; &quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎再次光临<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none; color:#12addb&quot;</span><span class="attr">href</span>=<span class="string">&quot;$&#123;SITE_URL&#125;&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>！<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chakan&quot;</span><span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;POST_URL&#125;&quot;</span><span class="attr">style</span>=<span class="string">&quot;color:#ffffff;text-decoration:none;display:inline-block;min-height:28px;line-height:28px;padding:0 13px;outline:0;background:#3eae5f;font-size:13px;text-align: center;font-weight:400;border:0;border-radius:999em&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点击去原文查看<span class="symbol">&amp;gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-p&quot;</span><span class="attr">style</span>=<span class="string">&quot;text-align: center; margin-top: 5rem; display:block;color:#b3b3b1;text-decoration:none;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.guole.fun/logo/guole.fun.png&quot;</span><span class="attr">style</span>=<span class="string">&quot;width:1.8rem; margin:0 auto&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">style</span>=<span class="string">&quot;width:165px;border:0;border-bottom:1px solid #e5e5e5;margin:5px auto;&quot;</span>/&gt;</span>©<span class="symbol">&amp;nbsp;</span>2021<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://guole.fun/&quot;</span><span class="attr">style</span>=<span class="string">&quot;text-align:center; color: #0da1e6a6&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>guole.fun<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="selector-class">.qmbox</span>::-webkit-scrollbar&#123;<span class="attribute">display</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">id</span>=<span class="string">&quot;cloudAttachStyle&quot;</span><span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="selector-class">.qmbox</span><span class="selector-id">#divNeteaseBigAttach</span>,<span class="selector-class">.qmbox</span><span class="selector-id">#divNeteaseBigAttach_bak</span>&#123;<span class="attribute">display</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">id</span>=<span class="string">&quot;blockquoteStyle&quot;</span><span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="selector-class">.qmbox</span> <span class="selector-tag">blockquote</span>&#123;<span class="attribute">display</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="selector-class">.qmbox</span> <span class="selector-tag">body</span>&#123;<span class="attribute">font-size</span>:<span class="number">14px</span>;<span class="attribute">font-family</span>:arial,verdana,sans-serif;<span class="attribute">line-height</span>:<span class="number">1.666</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">overflow</span>:auto;<span class="attribute">white-space</span>:normal;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">min-height</span>:<span class="number">100px</span>&#125;<span class="selector-class">.qmbox</span> <span class="selector-tag">td</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">input</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">button</span>,<span class="selector-class">.qmbox</span> select,<span class="selector-class">.qmbox</span> <span class="selector-tag">body</span>&#123;<span class="attribute">font-family</span>:Helvetica,<span class="string">&#x27;Microsoft Yahei&#x27;</span>,verdana&#125;<span class="selector-class">.qmbox</span> pre&#123;<span class="attribute">white-space</span>:pre-wrap;<span class="attribute">white-space</span>:-moz-pre-wrap;<span class="attribute">white-space</span>:-pre-wrap;<span class="attribute">white-space</span>:-o-pre-wrap;<span class="attribute">word-wrap</span>:break-word;<span class="attribute">width</span>:<span class="number">95%</span>&#125;<span class="selector-class">.qmbox</span> <span class="selector-tag">th</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">td</span>&#123;<span class="attribute">font-family</span>:arial,verdana,sans-serif;<span class="attribute">line-height</span>:<span class="number">1.666</span>&#125;<span class="selector-class">.qmbox</span> <span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:<span class="number">0</span>&#125;<span class="selector-class">.qmbox</span> <span class="selector-tag">header</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">footer</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">section</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">aside</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">article</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">nav</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">hgroup</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">figure</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">figcaption</span>&#123;<span class="attribute">display</span>:block&#125;<span class="selector-class">.qmbox</span> <span class="selector-tag">blockquote</span>&#123;<span class="attribute">margin-right</span>:<span class="number">0px</span>&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span>(<span class="attribute">max-width</span>:<span class="number">1100px</span>)&#123;<span class="selector-id">#content</span> <span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">10px</span>&#125;<span class="selector-id">#content</span> <span class="selector-tag">h3</span>&#123;<span class="attribute">font-size</span>:<span class="number">14px</span>&#125;<span class="selector-class">.footer-p</span>&#123;<span class="attribute">font-size</span>:<span class="number">9px</span>&#125;<span class="selector-class">.dear</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">id</span>=<span class="string">&quot;ntes_link_color&quot;</span><span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="selector-class">.qmbox</span> <span class="selector-tag">a</span>,<span class="selector-class">.qmbox</span> <span class="selector-tag">td</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:<span class="number">#236da1</span>&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>这白嫖，多是件美事啊~</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>滑到最下面，找到<code>邮件通知测试</code>设置项，输入自己的个人邮箱，如结果如下图，就成功了！<br><img src="over.webp" alt="完成!"></p><p>收工！</p><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=1h5k4r31lx7nu">https://cloud.tencent.com/developer/support-plan?invite_code=1h5k4r31lx7nu</a></p>]]></content>
      
      
      <categories>
          
          <category> 🛸青铜时代号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎵死磕记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级+优化的网易云歌单下载器</title>
      <link href="/article/783094e0/"/>
      <url>/article/783094e0/</url>
      
        <content type="html"><![CDATA[<p>嘿，大家好，今天复习了一下爬虫知识，自己想爬个网易云的歌单下来，备着以后禁网的时候听。但由于我懒癌晚期，懒得直接上浏览器上搜，搜着，发现没有一个合格的。<br>为什么？其实是因为那些爬虫是打开浏览器（即Selenium）、打开歌单的网址、把其中的歌曲名和链接拿下、依次用外链下载。<br>这个方法不好，原因是在网页版的网易云的<strong>无登陆状态</strong>是只能在歌单里看到十首歌，无法看全。就好比我歌单里有50首歌，而你的爬虫只能爬10首下来，没效果。</p><p>没办法，只能自己写了。<del>就是套了个api嘛。</del>源码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">playlist_id = <span class="built_in">input</span>(<span class="string">&#x27;请输入歌单id: &gt;&gt;&gt;&#x27;</span>)</span><br><span class="line">myjson = requests.get(</span><br><span class="line">    <span class="string">&#x27;https://api.injahow.cn/meting/?type=playlist&amp;id=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(playlist_id)</span><br><span class="line">)</span><br><span class="line">data = json.loads(myjson.text)</span><br><span class="line"></span><br><span class="line">urls = []</span><br><span class="line">names = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    url = jsonpath.jsonpath(i, <span class="string">&#x27;$..url&#x27;</span>)</span><br><span class="line">    name = jsonpath.jsonpath(i, <span class="string">&#x27;$..name&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    names.append(name[<span class="number">0</span>])</span><br><span class="line">    urls.append(url[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://api.injahow.cn/meting/?server=netease&amp;type=url&amp;id=1344088470</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;总共有&#123;&#125;个链接，开始下载……\n&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(urls)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;.\\缓存糖果屋\\&#123;&#125;\\&#x27;</span>.<span class="built_in">format</span>(playlist_id)):</span><br><span class="line">    os.mkdir(<span class="string">&#x27;.\\缓存糖果屋\\&#123;&#125;\\&#x27;</span>.<span class="built_in">format</span>(playlist_id))</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">name_count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line"></span><br><span class="line">    <span class="built_in">id</span> = url.split(<span class="string">&#x27;&amp;&#x27;</span>)[<span class="number">2</span>].split(<span class="string">&#x27;&amp;&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">with</span> requests.get(url) <span class="keyword">as</span> resp:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(</span><br><span class="line">            <span class="string">&#x27;.\\缓存糖果屋\\&#123;&#125;\\&#x27;</span>.<span class="built_in">format</span>(playlist_id) + <span class="built_in">id</span> + <span class="string">&#x27;.mp3&#x27;</span>,</span><br><span class="line">            mode=<span class="string">&#x27;wb&#x27;</span>,</span><br><span class="line">        ) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(resp.content)</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;完成&#123;&#125;个,即为&#x27;</span>.<span class="built_in">format</span>(num) + names[name_count])</span><br><span class="line">            name_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nALL DONE!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还有进度条版的:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">playlist_id = <span class="built_in">input</span>(<span class="string">&#x27;请输入歌单id: &gt;&gt;&gt;&#x27;</span>)</span><br><span class="line">myjson = requests.get(</span><br><span class="line">    <span class="string">&#x27;https://api.injahow.cn/meting/?type=playlist&amp;id=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(playlist_id)</span><br><span class="line">)</span><br><span class="line">data = json.loads(myjson.text)</span><br><span class="line"></span><br><span class="line">urls = []</span><br><span class="line">names = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    url = jsonpath.jsonpath(i, <span class="string">&#x27;$..url&#x27;</span>)</span><br><span class="line">    name = jsonpath.jsonpath(i, <span class="string">&#x27;$..name&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    names.append(name[<span class="number">0</span>])</span><br><span class="line">    urls.append(url[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://api.injahow.cn/meting/?server=netease&amp;type=url&amp;id=1344088470</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;总共有&#123;&#125;个链接，开始下载……\n&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(urls)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;.\\缓存糖果屋\\&#123;&#125;\\&#x27;</span>.<span class="built_in">format</span>(playlist_id)):</span><br><span class="line">    os.mkdir(<span class="string">&#x27;.\\缓存糖果屋\\&#123;&#125;\\&#x27;</span>.<span class="built_in">format</span>(playlist_id))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> tqdm(urls, desc=<span class="string">&#x27;下载中&#x27;</span>):</span><br><span class="line"></span><br><span class="line">    <span class="built_in">id</span> = url.split(<span class="string">&#x27;&amp;&#x27;</span>)[<span class="number">2</span>].split(<span class="string">&#x27;&amp;&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">with</span> requests.get(url) <span class="keyword">as</span> resp:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(</span><br><span class="line">            <span class="string">&#x27;.\\缓存糖果屋\\&#123;&#125;\\&#x27;</span>.<span class="built_in">format</span>(playlist_id) + <span class="built_in">id</span> + <span class="string">&#x27;.mp3&#x27;</span>,</span><br><span class="line">            mode=<span class="string">&#x27;wb&#x27;</span>,</span><br><span class="line">        ) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(resp.content)</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>效果:<br><img src="done.webp" alt=""></p><p>如果看到那些用ID命名的歌曲不惯呢，可以打开网易云音乐桌面版 —&gt; 打开本地音乐 —&gt; 选择目录 —&gt; 把<code>缓存糖果屋</code>添加进去 —&gt; 添加完后，点击匹配音乐 —&gt; ALL DONE!</p><p>TO DO LIST:</p><div class='checkbox red'><input type="checkbox" />            <p>将文件命名为歌曲名</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>加入歌曲下载</p>            </div><div class='checkbox yellow'><input type="checkbox" />            <p>实现GUI</p>            </div>]]></content>
      
      
      <categories>
          
          <category> 🛫万年鲲鹏号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎵死磕记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的Python学习经历</title>
      <link href="/article/a229657a/"/>
      <url>/article/a229657a/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ad0a78d928fbc87b3ea10533200b1c53382b6a37cf23075a87afd9eb02ca01d3">11b01ccd70607bc604403d41ac2586d9fe86e9fa72472fe268335a72926c9ad9122aa6d0d1a9537430c5e96f00ff5d380097741ffdc160a056b8684c39c60f1a0f859bf7ed8d9a31c035d7467a5d33535e2b329a94e5398c82fb920c61ff6660724eea17acced4263368700f0ceed0c1367e5fb2312bf8f65671e52bd61116f514cb664650dd13b568b10c2d0d821cd66c4e3f929e04b4fa65e4b40977eb56dcefab3157e07dbedc875686bb41ab6a2ac63b1c3f9d8af2a9089aec75ea97d25e1e5e54b2c3c5b79f032c68ccfa4da41c06a5d389177823927e8f3eb8f94d720ee18da881893a4e71f88c78dab57eb962386b97fda7af5f9783475803501202fe1a746e42f0ff2ded30a74dbeee215d883d1930ded14813b271dff4a5e8cba7c8754a4758272d9aedf79940b08cd6aff5b64a8b438ec6eb9cd8af4567cdd43207116ccbe5c6bb4890725e796209df207f922623e9e5ca6dc5e45ed539fec89e6beb2f42687942cb5c1b39d12755bd67c40c0b8becbeeefa267f686f37e38293adf40d0878804261855ebbcd3bff1f3cab6d0abe378810d040ff295c06ccbd901c1ce2ae1445e76aae0b6144c51ac77afcc822a99d0249cb422b60e057e5e9d6e05122365ca5e4c6104e9945956f18611a05de1681bf052c1ead312d0fffde9951c1581ae904b29825bbc0716e1649d4f8f37cb30165b44b8839f5ca829e209c21f6ba9b32550b3d24585db3e15f296e22e736bf1869d2ce5458731ed7b77e243387c4ed2ac1ae5b0806fd6981645994b27f36e7f870f5e272856c5eecdc6ef664cc19ba48d2b0ac88ee3c6023eaa7758e7774c72418c8c03289ff468c7420d0ba120cab39f0909c5ed6a393ca999284101c30043ee3c00e488e9eb952b2913a3930507ec7f9acd85161a146809de7523a487fe5fdf16c92bf3b5d98eb363c30182e0c611ea4d15399b8194720dc529d1b6d82766337d043c0ed246c431dc8f95d85e61ec614b09cfa375c0d487a0851c5f1ad550cf930244d7277381e66671121abbb0065553fe4839300a68db3c3c864a2fe8f6e12f26019b663ab20514773e9a468f9e7f9d0af0887ce77c09b4d720760d46a463e8199a5c3bc2af6e7434e88262f8faf054d02fc20829ec65310eb2acf75d3b45f85e61bf8531360849edacd229dcdbf5160349e00d0806b2d36900c616fff13ab3634f66be3243ec09dad3e3407213ca80f6d0d97b3e35dbd58a1d0856dbff6b7e5888e5f53a7e5fdcae223ae126595985326d07f2fcb95816f3def35e72e3a9027ec78f6798eb74932866f1eb3442d9d8c98a66f57445302a073c830d7da625529c28e6240fdb37cafc3768799da853ddb7df1e0e1072ab1662b8be178903cf3b8600dc92239a3651f43013bcfc52b5e830eba914fdf8efa86bb2e7d3e660468553565d8363a1fb1ef1c8eff023c045709082d14d697d5ef7b7a1b30a53f7eb14eb52095c27d3ea0fbd9e6decf3c290fefa6c55311101ff10672c6b01fe9d8cf7a18114e90ba86e832f5310b1e287d3b0f19a6ccc905e1b0cb917e72bd0dff81783a444b7f2d07e74fc4b0c81d4514b674c10fb2e1a39ab5469b7f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="哈喽, 博文被加密了哦！.">哈喽, 博文被加密了哦！.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 🚁无限边疆号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🤔感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Selenium自动化详解</title>
      <link href="/article/6dh83ks9/"/>
      <url>/article/6dh83ks9/</url>
      
        <content type="html"><![CDATA[<details class="folding-tag" ><summary> 吹BB </summary>              <div class='content'>              <p>Selenium，Python的浏览器自动化大佬库，称霸Python<strong>浏览器</strong>自动化领域。<br>作为萌新的我，当然要先学习这个既简单又困难的库。</p>              </div>            </details><div class="tip "><p>注意，阅读本文需要有亿点点前端知识才容易理解。<del>要是大佬看到了不会冒犯到吧，不会吧……</del></p></div><h2 id="安装-Selenium-包"><a href="#安装-Selenium-包" class="headerlink" title="安装 Selenium 包"></a>安装 Selenium 包</h2><h3 id="Pip-安装"><a href="#Pip-安装" class="headerlink" title="Pip 安装"></a>Pip 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install selenium</span><br></pre></td></tr></table></figure><h3 id="源码包安装"><a href="#源码包安装" class="headerlink" title="源码包安装"></a>源码包安装</h3><div class="btns rounded grid5">            <a class="button" href='https://pypi.org/project/selenium/#files' title='下载源码'><i class='fas fa-download'></i>下载源码</a>          </div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure><h2 id="安装-对应浏览器的-WebDriver"><a href="#安装-对应浏览器的-WebDriver" class="headerlink" title="安装 对应浏览器的 WebDriver"></a>安装 对应浏览器的 <strong>WebDriver</strong></h2><p>Edge: <a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/</a><br>Chrome (淘宝源) : <a href="https://npm.taobao.org/mirrors/chromedriver/">https://npm.taobao.org/mirrors/chromedriver/</a><br>Firefox:  <a href="https://github.com/mozilla/geckodriver/releases/">https://github.com/mozilla/geckodriver/releases/</a><br>IE: <a href="http://selenium-release.storage.googleapis.com/index.html?">http://selenium-release.storage.googleapis.com/index.html?</a></p><div class="tip "><p><span class='p red'>Edge</span>：对应浏览器对应版本，对应下载。<br><span class='p cyan'>Chrome</span>: 注意，先在设置 —&gt; 关于Chrome 里查看Chrome版本号,再去我给的淘宝源里找。再注意，在淘宝源里找版本时，如果没有本浏览器的版本的话，就找自己版本号的<strong>上一个</strong>。<br><span class='p yellow'>Firefox</span>: 选择自己系统版本下载对应的。<del>我不用火狐，报错别怪我 (弱小.jpeg)</del><br><span class='p gray'>IE</span>: 这我没啥注释，但建议IE11用<strong>用2.5版本</strong>就好。(这年头还有人用IE?可怕可怕。)</p></div><p>下载解压后把文件放在Python目录下的Scripts目录中，别问为啥，问就是懒得加<strong>环境变量</strong>。Linux的可以放在<strong> /usr/bin </strong>下。</p><h2 id="开始！"><a href="#开始！" class="headerlink" title="开始！"></a>开始！</h2><p>废话忒多了，进入正题。</p><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p>咱为啥要用Selenium，就是可以爬到普通爬虫爬不到的东东，用Selenium，更方便、更快捷、更显逼格！(打广告)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome() <span class="comment">#按照你的浏览器来，就上面那几种</span></span><br><span class="line">driver.get(<span class="string">&quot;https://bing.com&quot;</span>) <span class="comment">#对应浏览器打开Bing标签页</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大概会看到这样:<br><img src="dri.webp" alt=""></p><p>如何<strong>往输入框内填入文字</strong>并<strong>点击搜索按钮进行搜索</strong>？<br>Very Easy.</p><p>不要动你那个界面，打开<strong>DevTools</strong>，找到搜索框的元素，<kbd>右键</kbd> - <kbd>Copy</kbd> - <kbd>CopyXpath</kbd>，再回到代码这。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome() <span class="comment">#按照你的浏览器来，就上面那几种</span></span><br><span class="line">driver.get(<span class="string">&quot;https://bing.com&quot;</span>) <span class="comment">#对应浏览器打开Bing标签页</span></span><br><span class="line"></span><br><span class="line">input_table = driver.find_element_by_xpath(<span class="string">&#x27;你Copy的值&#x27;</span>) <span class="comment">#请原谅我那糟糕的命名。</span></span><br><span class="line">input_table.send_keys(<span class="string">&#x27;梁非凡&#x27;</span>) <span class="comment"># 你想输入啥？</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="tip "><p>注意，<code>find_element_by_xpath</code>这个函数很微妙，它的工作是在整个页面找<strong>一个</strong>元素，敲黑板，是<strong>一个</strong>。还有一个函数是<code>find_elements_by_xpath</code>，找的是一堆元素。很多手残的会多敲个s，找了半天的bug。<del>说的就是我😭</del></p></div><p>运行。</p><p>可以看到，输入框里输入了<strong>梁非凡</strong>，接着干。<br>按照上次那样，打开Devtools，找到<strong>搜索按钮的元素</strong>,接着Copy —&gt; Copy Xpath。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome() <span class="comment">#按照你的浏览器来，就上面那几种</span></span><br><span class="line">driver.get(<span class="string">&quot;https://bing.com&quot;</span>) <span class="comment">#对应浏览器打开Bing标签页</span></span><br><span class="line"></span><br><span class="line">input_table = driver.find_element_by_xpath(<span class="string">&#x27;你Copy的值&#x27;</span>) <span class="comment">#请原谅我那糟糕的命名。</span></span><br><span class="line">input_table.send_keys(<span class="string">&#x27;梁非凡&#x27;</span>) <span class="comment"># 你想输入啥？</span></span><br><span class="line"></span><br><span class="line">search_btn = driver.find_element_by_xpath(<span class="string">&#x27;Copy Value&#x27;</span>)</span><br><span class="line">search_btn.click()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行。<br>搞定！</p><div class="tip "><p>还有一种方法，将<code>click()</code>换成<code>submit()</code>，或是Webdriver模拟用户点击按键<kbd>Enter</kbd>进行搜索。进阶会讲。</p></div><p><img src="over.webp" alt=""></p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>学了总要运用，搞个爬虫实例。</p><h3 id="实战"><a href="#实战" class="headerlink" title="实战:"></a>实战:</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>让终端更优雅—— Windows Terminal美化</title>
      <link href="/article/2fe613e2/"/>
      <url>/article/2fe613e2/</url>
      
        <content type="html"><![CDATA[<details class="folding-tag" ><summary> 站长的碎碎念 </summary>              <div class='content'>              <p><img src="cmd.png" alt="这是默认的CMD"></p><p>这就是默认的<code>命令提示符</code>，这还是我美化过的，cmd的潜质就只能被挖掘到这了。<del>每天看这个我会吐的🤮</del><br>我们不能就苟居于此。看到微软的<code>Build 2019 大会</code>的了吗，Windows Terminal，我一看，好东西，立马看文档配置，学成以后，便有此文。</p>              </div>            </details><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开<code>Microsoft Store</code>，搜索<code>Windows Terminal</code>，直接安装即可。<br><img src="store.webp" alt="这是Win11的应用商店"></p><p>还有个预览版，不知有什么差别，可以尝试。大概也差不了太多。<br><img src="storepre.webp" alt="预览版"></p><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p>打开安装好的Windows Terminal，大概是这样:<br><img src="winter.webp" alt="请忽略我的Hexo日志"></p><p>很简单，我就只是加了个壁纸，调了一下不透明度，换了个字体，就完了。<br>你只需点那个向下的箭头，在下拉菜单里点击<code>设置</code>，在新建的窗口的下面点击你想设置的终端，如常用的<code>Powershell</code>和<code>CMD</code>，再找到<code>外观</code>,如下。</p><p><img src="set.webp" alt="设置页面"></p>]]></content>
      
      
      <categories>
          
          <category> ✈️自然选择号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🪟Windows 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vercel-加速个人博客</title>
      <link href="/article/db9907b/"/>
      <url>/article/db9907b/</url>
      
        <content type="html"><![CDATA[<details class="folding-tag" ><summary> 参见大佬文章 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/812734f8/"><div class="left"><img src="https://unpkg.zhimg.com/akilar-candyassets/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/812734f8/</p></div></a></div>              </div>            </details><details class="folding-tag" ><summary> 起因 </summary>              <div class='content'>              <p>现在有不少人的博客网站都是白嫖 Github Pages等<code>免费</code>静态文件部署站的吧，我也不例外。但免费的东西总有不足之处，例如链接太长啦、加载太慢啦、CDN流量没啦等等。在以前配置Twikoo时就发现了一个还算良心的<span class='p blue'>加速</span>平台 —— Vercel</p>              </div>            </details><h2 id="登录-注册"><a href="#登录-注册" class="headerlink" title="登录/注册"></a>登录/注册</h2><div class="tag link"><a class="link-card" title="Vercel官网" href="https://vercel.com/signup"><div class="left"><img src="https://assets.vercel.com/image/upload/q_auto/front/favicon/vercel/favicon.ico"/></div><div class="right"><p class="text">Vercel官网</p><p class="url">https://vercel.com/signup</p></div></a></div><p><img src="signup.webp" alt="注册页"></p><p>大概是这样，选择自己的注册方式进去注册，但有个大坑等着你跳……<br>我第一次注册的时候报了个错，就是下面这个。<br><code>Error:This user account is blocked. Contact support@vercel.com for more information.</code></p><p>就是这个，整的我心态崩溃，其实解决很简单，你只需要按他要求发个邮件给他就行，就这么简单粗暴，我也是这么解决的，还多了一个外交机会，感兴趣的可以看我与可能跟我隔了大半个地球的人类对话</p><details class="folding-tag" ><summary> 跨地球交流 </summary>              <div class='content'>              <p><img src="com.webp" alt="邮件"></p>              </div>            </details><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>登陆后，大概会自动进入Dashboard(即仪表板)，然后点击New Project,然后会看到这样：<br><img src="pro.webp" alt="New Project"></p><p>我是登陆好的，一般应该是要先登录Github账号后同步才会这样。<br>到了这个界面后，点击进入下面的<code>Import Third-Party Git Repository</code>,输入自己博客静态文件的Github地址。</p><div class="tip "><p>如果还没部署到Github上，就先随便点个仓库，先创建了先。</p></div><p>搞定这些后，会进入这样的页面：<br><img src="over.webp" alt="创建仓库"></p><div class="tip warning"><p>注意，<span class='p blue'>my-repository</span>填的是将创建的仓库名，但这也是部署后的域名的一部分，能短就短，更何况填了就不能改了，慎填。</p></div><p>整完这些后，Vercel会自动Clone源仓库的东东到你设的<code>my-repository</code>，可以在下面查看进度，等一小会……</p><h2 id="Over"><a href="#Over" class="headerlink" title="Over!"></a>Over!</h2><p>搞定后，Vercel会给你重定向，放烟花，可喜庆了。<br><img src="done.webp" alt="done"></p><p>点击中间的Domains下面的链接，那就是你的加速博客！</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="设定自定义域名"><a href="#设定自定义域名" class="headerlink" title="设定自定义域名"></a>设定自定义域名</h3><p>谁都不想用这不自由的又臭又长的地址，所以我命由我不由天。点击菜单栏的<code>Settings</code>，找到 <code>Domains</code>，点击默认域名右边的<code>Edit</code>按钮，自己改。<del>要是这都不会整什么博客，简直就是保姆级教程</del></p><h3 id="更新网页"><a href="#更新网页" class="headerlink" title="更新网页"></a>更新网页</h3><p>当你又对网页进行更改了咋办？No Problem。我们只需点到菜单栏的<code>Deployments</code>，点第一个列表Item右边的那三个点，像这样。<br><img src="buchong.webp" alt="补充2"><br>点击后出来一个框，点<code>Promote to Production</code>，弹出个确认框，确认完事。</p>]]></content>
      
      
      <categories>
          
          <category> 🛸青铜时代号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📁教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021·总结</title>
      <link href="/article/632f5ce3/"/>
      <url>/article/632f5ce3/</url>
      
        <content type="html"><![CDATA[<div class="tip sync"><p>这篇年度总结迟到了1月19天，也许有些目标已经忘记了，想起来就会持续更新。</p></div><h1 id="回顾-2021-🐂"><a href="#回顾-2021-🐂" class="headerlink" title="回顾 2021 🐂"></a>回顾 2021 🐂</h1><p>2021这一年各个行业都不平凡，科技界有华为出鸿蒙2.0、OpenEuler系统，医学界有中国全面第二针甚至是第三针，而我在这一年也有许多改变和进步。</p><p>一是我学习较以前更 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 刻苦了，<psw>虽然说语文依旧很烂。</psw>二是我的Code水平得到了有效提高，大部分原因还是我啃了好几本砖头书，如：《操作系统概念精要》、《编译原理》、《Tensorflow AI 》等 blabla的书📚</p><p>最重要的是 (至少我是那么认为的)，本博客其实2021瘫了半年，记得是最后一次部署时Hexo报错：[No layout: index.html] 当时没看到，到学校上信息课时，一上博客，一片白，把我吓蒙了。然后没时间管，就渐渐忘了，很多博文没写。</p><p>到了寒假，我就自由了，赶紧换个主题上线，就像现在这样，好看不？</p><div class="tag link"><a class="link-card" title="博客公告" href="/article/744616242/"><div class="left"><img src="/img/favicon.png"/></div><div class="right"><p class="text">博客公告</p><p class="url">/article/744616242/</p></div></a></div><p>最近疯狂刷博客，看看那Commits，2022才刚开始就三百多。<br><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/Niko-Karen"><img src="https://github-readme-stats.vercel.app/api/?username=Niko-Karen&theme=algolia&show_owner=true"/></a></p><h1 id="展望-2022-🐅"><a href="#展望-2022-🐅" class="headerlink" title="展望 2022 🐅"></a>展望 2022 🐅</h1><p>对于我这种小学生，最重要莫过于我人生中的第一场、也是一生一次的大考 —— 小升初。<br>也许我不能说那么哲学，但还是要说：<span class='p blue'>小升初即是童年旅程的终点站。</span></p><p>算了，不要那么抒情啦。进入正题。</p><div class="timeline  orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022 将要发生的重大事迹</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>未知</p></div></div><div class='timeline-item-content'><p>黄冈中学密考，好像是五月多。<br> 目前已考上<span class='p cyan'>广大附中</span>……的分校，好像很……LAN </p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-05-28</p></div></div><div class='timeline-item-content'><p><emp>计算机二级</emp> Python 语言程序设计考试!<br>证明自己实力的时刻！<br>加油！</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-09-01</p></div></div><div class='timeline-item-content'><p>入初中，不知能进那所初中呢？</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-09-02</p></div></div><div class='timeline-item-content'><p>嘿嘿，没想到吧，这天我生日。<br>我只要提早3天生出来就可以上初中了。可恶(〃＞目＜)。</p></div></div></div><p>TO DO LIST:</p><div class='checkbox red'><input type="checkbox" />            <p>成功考过计算机二级Python</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>进入黄冈中学</p>            </div><div class='checkbox yellow'><input type="checkbox" />            <p>必须出个Python开源项目</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>多写博文</p>            </div>]]></content>
      
      
      <categories>
          
          <category> 🛩️蓝色空间号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔚总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>说说Linux</title>
      <link href="/article/4ed560a5/"/>
      <url>/article/4ed560a5/</url>
      
        <content type="html"><![CDATA[<div class="note red icon simple"><i class="note-icon fas fa-exclamation-triangle"></i><p>本文会有很多主观意识的<del>暴力语言</del>，如有不适，请吐槽，本人尽快更改。</p></div><p>我用Linux也有很长时间了，有近三年了。在我9岁的时候，我第一次接触电脑就是用Ubuntu 18.04 LTS，当时图形界面已经很好看了，以至于现在我家的那台古董电脑还运行着Lubuntu 18.04 LTS (Ubuntu的分支版，LXDE桌面)。</p><h2 id="个人Linux使用史-主观"><a href="#个人Linux使用史-主观" class="headerlink" title="个人Linux使用史 { 主观 }"></a>个人Linux使用史 { 主观 }</h2><h3 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h3><p>那时我正在上网查资料，觉得Win7很丑、跟不上时代了，就想换个系统。当时在我们普通人眼中，只有一种系统:Windows，所以当时一搜 “重装系统” 就满屏是Windows的重装教程(我还不会自己重装)。</p><p>我特无奈:”我的电脑装Win7已经有些撑不住了，还能来个Win8.1 ?Win10 ?”所以我再搜:”除Windows外的开源系统”，就出来个Linux,Unix。<br>“甚么是Linux? 甚么是Unix” 带着疑问，就尝试学习装了个最简单的Ubuntu。<psw>差点就装上了Arch，装成了我估计要成仙。😅</psw></p><h3 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h3><p>自从我发现Linux这个大宝藏，就沉迷于此不可自拔，不停换系统:Ubuntu,Debian,Fedora,Centos……甚至Arch都装上了。但有个大毛病，就是我装上后总嫌不好看，不停美化，把系统速度拉低又拉低，但好处既是我的命令行越来越熟，越来越快。</p><h3 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h3><p>到了这个阶段，我可以自建Git服务器、博客服务器，运用git等工具……巴拉巴拉很多技能都学习到了。其中激励我的大概都是我对计算机的热爱和痴迷，有了这些我才能步步高升，登上计算机的殿堂。</p><h2 id="Linux-发展史-客观"><a href="#Linux-发展史-客观" class="headerlink" title="Linux 发展史 { 客观 }"></a>Linux 发展史 { 客观 }</h2><p>我对以前的Linux版本不熟，我主要了解的是内核版本4.5+至5.0+，平时使用的，也就这几个，曾经也自己编译内核自制小系统，叫<mark class="hl-label orange">SimLinux</mark> ，意思就是简单的Linux，功能也简单。就只有个Bash。</p><div class="note purple icon simple"><i class="note-icon fab fa-linux"></i><p>本人要不下次写个<mark class="hl-label blue">自己编译、制作Linux发行版教程</mark> ? 大家众议。</p></div><p>跑题了，回到正题。</p><h3 id="2018-1"><a href="#2018-1" class="headerlink" title="2018"></a>2018</h3><p>2018年的Linux已经非常不错了，当时的图形界面(除了图标)和现在竟没啥大变化。 <psw>如果你美化了当我没说。</psw></p><p>下面这玩意2G内存装Gnome挺神奇的，我也是2G内存，但装上Gnome就是PPT😑<br><img src="debian2018.webp" alt="2018的Debian"></p><h3 id="2019-1"><a href="#2019-1" class="headerlink" title="2019"></a>2019</h3><p>2019 图形界面较2018进步了点，尤其是图标进步很大，更有后起之秀<strong>Zorin OS</strong>，又漂亮又方便，制作者是两名爱尔兰的青少年。</p><p><img src="zorin.webp" alt="Zorin OS"></p><h3 id="2020-1"><a href="#2020-1" class="headerlink" title="2020"></a>2020</h3><p>2020的Linux没啥大变化，但美化下还是很不错的，我觉得吧，Linux用于服务器等商业方面就好，在个人发行版上还不够成熟，几乎每个人拿到Linux后都是直接美化，浪费时间，不太好的习惯，建议改正。</p><p><img src="fedora.webp" alt="Fedora Gnome"></p><h2 id="BALABALA"><a href="#BALABALA" class="headerlink" title="BALABALA"></a>BALABALA</h2><p>我对Linux这个系统还是充满希望的，我也挺喜欢这个企鹅，和那个<del>文明有礼</del>的Linus。最后，祝Linux越来越好！<br><img src="linus-nvidia.webp" alt="Linus的咆哮"><br><img src="tux.webp" alt="Tux持枪"></p>]]></content>
      
      
      <categories>
          
          <category> ✈️自然选择号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ⭐️评价 </tag>
            
            <tag> 🐧Linux 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-Requests</title>
      <link href="/article/e9ee3cf1/"/>
      <url>/article/e9ee3cf1/</url>
      
        <content type="html"><![CDATA[<div class="note red icon simple"><i class="note-icon fas fa-language"></i><p>本教程使用Python语言，需提前安装Pip3 or Pip，例如Linux类的，请在命令行内输入:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-pip</span><br></pre></td></tr></table></figure></div><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><div class="tabs" id="安装"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#安装-1">Linux</button></li><li class="tab"><button type="button" data-href="#安装-2">Windows</button></li><li class="tab"><button type="button" data-href="#安装-3">Macos</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="安装-1"><p>一条命令(临时换源):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install requests -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装-2"><p>Pypi包源官网: <a href="https://pypi.org/project/requests/">Requests</a><br><img src="pypi.webp" alt="大概是这样的"><br>在这可以看到有关这个第三方库的一切。</p><p>另一个就是PIP命令行安装，很简单，一条命令。</p><div class="note purple icon simple"><i class="note-icon fas fa-info"></i><p>由于包源在国外，所以访问速度感人，可以先Pip换源，再试。(后面说)</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>加速(阿里云): </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="安装-3"><p><strong>本人无钱购买Mac，所以没有钞能力去完成这个教程，各位有钱人施舍施舍？</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="基础-Get请求"><a href="#基础-Get请求" class="headerlink" title="基础{Get请求}"></a>基础{Get请求}</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&#x27;</span></span><br><span class="line">&#125;  <span class="comment"># 向服务器传递的数据</span></span><br><span class="line">response = requests.get(<span class="string">&#x27;https://bing.com&#x27;</span>,data=data).text <span class="comment"># text函数:获取对应网址的源代码</span></span><br><span class="line"><span class="built_in">print</span>(response)</span><br></pre></td></tr></table></figure><p>User-Agent就像是<strong>浏览器的身份证</strong>,如果是Requests默认的ua的话，对应服务器会拒绝你的<strong>爬虫</strong>请求，简而言之，拿不到数据。</p><p><img src="demo1.webp" alt="就在这拿User-Agent"></p><h3 id="进阶-Post请求"><a href="#进阶-Post请求" class="headerlink" title="进阶 {Post请求}"></a>进阶 {Post请求}</h3><p><img src="demo2.webp" alt="官网教程"></p><ol><li>带数据的 post</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line">host = <span class="string">&quot;http://httpbin.org/&quot;</span></span><br><span class="line">endpoint = <span class="string">&quot;post&quot;</span></span><br><span class="line">url = <span class="string">&#x27;&#x27;</span>.join([host,endpoint])</span><br><span class="line">data = &#123;<span class="string">&#x27;key1&#x27;</span>:<span class="string">&#x27;value1&#x27;</span>,<span class="string">&#x27;key2&#x27;</span>:<span class="string">&#x27;value2&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line">r = requests.post(url,data=data)</span><br><span class="line"><span class="comment">#response = r.json()</span></span><br><span class="line"><span class="built_in">print</span> (r.text)</span><br></pre></td></tr></table></figure><ol><li>多文件上传</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line">host = <span class="string">&quot;http://httpbin.org/&quot;</span></span><br><span class="line">endpoint = <span class="string">&quot;post&quot;</span></span><br><span class="line"> </span><br><span class="line">url = <span class="string">&#x27;&#x27;</span>.join([host,endpoint])</span><br><span class="line"><span class="comment">#多文件上传</span></span><br><span class="line">files = [</span><br><span class="line">    (<span class="string">&#x27;file1&#x27;</span>,(<span class="string">&#x27;test.txt&#x27;</span>,<span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))),</span><br><span class="line">    (<span class="string">&#x27;file2&#x27;</span>, (<span class="string">&#x27;test.png&#x27;</span>, <span class="built_in">open</span>(<span class="string">&#x27;test.png&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)))</span><br><span class="line">    ]</span><br><span class="line"> </span><br><span class="line">r = requests.post(url,files=files)</span><br><span class="line"><span class="built_in">print</span> (r.text)</span><br></pre></td></tr></table></figure><h3 id="冷门-Put-请求"><a href="#冷门-Put-请求" class="headerlink" title="冷门 {Put 请求}"></a>冷门 {Put 请求}</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">url_put = <span class="string">&quot;http://127.0.0.1:8080/&quot;</span></span><br><span class="line">headers_put = &#123;</span><br><span class="line"><span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">param = &#123;</span><br><span class="line"><span class="string">&#x27;myObjectField&#x27;</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">payload = json.dumps(param)</span><br><span class="line">response_put = requests.put(url, data=payload, headers=headers_put)</span><br></pre></td></tr></table></figure><h2 id="项目实战-梨视频爬虫"><a href="#项目实战-梨视频爬虫" class="headerlink" title="项目实战: 梨视频爬虫"></a>项目实战: 梨视频爬虫</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@author: </span></span><br><span class="line"><span class="string">@file: 梨视频爬虫.py</span></span><br><span class="line"><span class="string">@time: 2021/7/11 21:48</span></span><br><span class="line"><span class="string">@desc: </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.pearvideo.com/video_1731260&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;referer&quot;</span>: url,</span><br><span class="line">&#125;</span><br><span class="line">contId = url.split(<span class="string">&quot;_&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">videoStatusUrl = <span class="string">f&quot;https://video.pearvideo.com/mp4/third/20210603/cont-<span class="subst">&#123;contId&#125;</span>-15316010-202041-hd.mp4&quot;</span></span><br><span class="line"><span class="comment"># &#x27;https://video.pearvideo.com/mp4/third/20210603/cont-1731260-15316010-202041-hd.mp4&#x27;</span></span><br><span class="line"></span><br><span class="line">resp = requests.get(videoStatusUrl, headers=headers).content</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;video.mp4&quot;</span>, mode=<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(resp)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>第14行,referer的定义，因梨视频请求头中必须有<code>防盗链</code>，即字典中的<code>referer</code>，如果没有，则获取不到视频数据。</li><li>第16、17行，通过抓包得知，梨视频的视频直链即为一串固定地址加上视频ID号，只需进行字符串分割即可。</li><li>第20行，向服务器发起<span class='p purple'>GET</span>请求，注意,<code>.content</code>是获取网页的<code>二进制数据</code>。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这库是真的好用，方便。比Python标准库urllib好N倍不止，平时爬虫爬个电影数据就好，不要太过分。</p>]]></content>
      
      
      <categories>
          
          <category> 🛫万年鲲鹏号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🐍Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows11 美化+优化教程</title>
      <link href="/article/cce073e6/"/>
      <url>/article/cce073e6/</url>
      
        <content type="html"><![CDATA[<h2 id="跟微软的姻缘"><a href="#跟微软的姻缘" class="headerlink" title="跟微软的姻缘"></a>跟微软的姻缘</h2><p>事情回到两年前，那时我刚放暑假，如疯狗般把作业写完后，百无聊赖，就打开电脑玩。<br>上网看了看新闻后，感觉有点无趣: 上哪个网站都要登录，没账号、没邮箱寸步难行啊！</p><p>就去注册个邮箱吧！心里想着。到处找地址，搜百度。但几乎没有哪个邮箱注册是不需要手机号的，而我就缺这玩意！<br>咋办？接着找呗。最后，我找了<a href="https://outlook.com">Outlook</a>，不用手机号！真香！</p><p>就这样，跟微软扯上关系了呗(谁叫Gmail需要翻墙的……那时我还不知道VPN是什么 😑)</p><h2 id="回到正题"><a href="#回到正题" class="headerlink" title="回到正题"></a>回到正题</h2><p>不扯那么远。回到咱们主题: <mark class="hl-label purple">Windows11美化+优化教程</mark> </p><p>注意，是<strong>Windows 11</strong>。禁止Windows 10仿Win11入内！</p><hr><p>先给大家展示下我桌面哈<br><img src="mydesktop.webp" alt="我的桌面"></p><h3 id="透明化任务栏"><a href="#透明化任务栏" class="headerlink" title="透明化任务栏"></a>透明化任务栏</h3><p>目前Windows虽然支持透明化，但还不够，还是太模糊了。我们要完美，完美！{来自处女座的咆哮}</p><div class="tabs" id="透明化方法"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#透明化方法-1">透明化方法 1</button></li><li class="tab active"><button type="button" data-href="#透明化方法-2">透明化方法 2</button></li><li class="tab"><button type="button" data-href="#透明化方法-3">透明化方法 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="透明化方法-1"><h4 id="死磕在Windows设置里"><a href="#死磕在Windows设置里" class="headerlink" title="死磕在Windows设置里"></a>死磕在Windows设置里</h4><ol><li>打开设置 -&gt; 辅助功能 -&gt; 视觉效果</li><li>勾选<strong>透明效果</strong>，(好像装系统就自动勾了…)<br>Effect: 任务栏只有50%透明，<strong>不推荐</strong></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="透明化方法-2"><h4 id="使用软件：TranslucentTB"><a href="#使用软件：TranslucentTB" class="headerlink" title="使用软件：TranslucentTB"></a>使用软件：TranslucentTB</h4><p>优点：比另一个重点，但样式多。<br>缺点：好处说了，太重了。</p><div class="tabs" id="使用方法"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#使用方法-1">使用方法 1</button></li><li class="tab"><button type="button" data-href="#使用方法-2">使用方法 2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="使用方法-1"><h5 id="在应用商店里下载"><a href="#在应用商店里下载" class="headerlink" title="在应用商店里下载"></a>在应用商店里下载</h5><p>打开应用商店，搜索<strong>TranslucentTB</strong>,安装、下载，免费送货上门<br><img src="store.webp" alt="应用商店(汉化的)"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="使用方法-2"><h5 id="上官网下载"><a href="#上官网下载" class="headerlink" title="上官网下载"></a>上官网下载</h5><p>提供网址: </p><ol><li><a href="https://github.com/TranslucentTB/TranslucentTB">Github网址</a></li><li><a href="https://pc.qq.com/detail/0/detail_24860.html">腾讯软件管家</a></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="透明化方法-3"><p><h4 id="使用软件：Startisback"><a href="#使用软件：Startisback" class="headerlink" title="使用软件：Startisback"></a>使用软件：Startisback</h4><p>官网：<a class="btn-beautify " href="https://startisback.com/"   title="Startisback"><i class="outline"></i><span>Startisback</span></a></p></p><p><ol></p><p><li>下载 <strong>Free Trial</strong>版，即免费版，足够了。</li></p><p><li>下载解压后，以<strong>管理员身份运行</strong>，安装。</li></p><p><li>打开控制面板</li></p><p><li>将右上角的【查看方式】修改为【大图标】，在下面点击【开始菜单】</li></p><p><li>点击左侧的【外观】，在右侧勾选【使用自定义任务栏颜色】，然后在右侧将颜色的滑动块移动到最左边，点击应用 — 确定</li></p><p><li>打开任务管理器</li></p><p><li>重启<strong>任务管理器</strong></li><br>&lt;/ol&gt;</p><p><p>All Done!<br></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h3 id="Dism-优化"><a href="#Dism-优化" class="headerlink" title="Dism++优化"></a>Dism++优化</h3><blockquote><p>美化易上头，一上头就把持不住。尽早跳出坑来，让其他人跳进去。嘻嘻~</p></blockquote><a class="btn-beautify " href="https://dl.softmgr.qq.com/original/System/Dism10.1.1001.10.zip"   title="下载"><i class="outline"></i><span>下载</span></a><p>下载解压后，选择自己系统版本，打开对应的Dism++ EXE，尽自己所能优化，不会别动就行。</p><h3 id="不断探索"><a href="#不断探索" class="headerlink" title="不断探索"></a>不断探索</h3><p>博主能力有限，也就一小学生，也就只能写这些了，有疑问或需求请在评论区提出，本人将加速更新。BiuBiu~</p><p><img src="learn.webp" alt="晒晒Microsoft Learn账号"></p>]]></content>
      
      
      <categories>
          
          <category> ✈️自然选择号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🪟Windows 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Product -- 网易云下载播放器</title>
      <link href="/article/759379402/"/>
      <url>/article/759379402/</url>
      
        <content type="html"><![CDATA[<p>昨天翻了下写过的博文，其中有一篇是写<a href="http://localhost:4000/posts/2118472832/" title="文章">网易云直链</a>的，看着看着，一个邪恶的想法油然而生……<br><span id="more"></span></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1344438011&auto=1&height=66"></iframe><blockquote><p>“为何不做一个集合音乐下载和播放的小程序呢？以我的能力完全可以的啊！搞他。”</p><footer><strong>Niko</strong><cite>贱贱的语言</cite></footer></blockquote><p>于是开始搞了。</p><p>也没多久，一天一夜，搞定了。<br><img src="1.webp" alt="项目打包好的文件"><br>下载的音乐会以歌曲id命名，放在文件目录，支持多文件下载（不是同时）。<br><img src="2.webp" alt="软件界面(丑不？)"><br>看到没，下载完之后支持选择播放，但，凡事就怕但。<br>界面是在太 {丑} 好 {得} 看 {一} 了{批}！</p><p>没办法啊！Python语言没一个好看的UI界面，也可能有，我不会用，比如Pyqt5。<br>害，不多说了，多说无益，放源代码！</p><p><a href="https://github.com/Niko-Karen/my_code/blob/master/Python/%E6%92%AD%E6%94%BE.py">Github文件地址</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter.constants <span class="keyword">import</span> LEFT, RIGHT</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">music_play</span>():</span><br><span class="line">    <span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line">    pygame.mixer.init()</span><br><span class="line">    pygame.mixer.music.load(<span class="built_in">str</span>(<span class="built_in">id</span>) + <span class="string">&#x27;.mp3&#x27;</span>)</span><br><span class="line">    pygame.mixer.music.play()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_link</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        text = entry.get()</span><br><span class="line">        lst = text.split(<span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">        str_lst = lst[<span class="number">1</span>].split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        link = <span class="string">&#x27;https://music.163.com/song/media/outer/url?id=&#x27;</span> + str_lst</span><br><span class="line"></span><br><span class="line">        <span class="keyword">global</span> <span class="built_in">id</span></span><br><span class="line">        <span class="built_in">id</span> = <span class="built_in">str</span>(str_lst)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> link, <span class="built_in">id</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> error:</span><br><span class="line">        error_s = <span class="string">&#x27;ERROR:&#x27;</span>, <span class="built_in">str</span>(error)</span><br><span class="line">        entry.delete(<span class="number">0</span>, tkinter.END)</span><br><span class="line">        messagebox.showerror(error_s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_song</span>(<span class="params">link, <span class="built_in">id</span></span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = requests.get(link, data=data).content</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;.\\&#x27;</span> + <span class="built_in">id</span> + <span class="string">&#x27;.mp3&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> s:</span><br><span class="line">        s.write(resp)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    result = messagebox.askyesno(title=<span class="string">&#x27;是否播放？&#x27;</span>, message=<span class="string">&#x27;下载完成，是否播放？&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> result:</span><br><span class="line">        music_play()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ex</span>():</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tkin_canvas</span>():</span><br><span class="line">    <span class="keyword">global</span> top</span><br><span class="line">    top = tkinter.Tk()</span><br><span class="line">    top.title(<span class="string">&#x27;网易云音乐下载&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    L1 = tkinter.Label(top, text=<span class="string">&#x27;请输入歌曲网址:&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> entry</span><br><span class="line">    entry = tkinter.Entry(top)</span><br><span class="line"></span><br><span class="line">    button = tkinter.Button(top, text=<span class="string">&#x27;下载&#x27;</span>, command=main)</span><br><span class="line">    button_exit = tkinter.Button(top, text=<span class="string">&#x27;退出&#x27;</span>, command=ex)</span><br><span class="line"></span><br><span class="line">    L1.pack(side=LEFT)</span><br><span class="line">    button_exit.pack(side=RIGHT)</span><br><span class="line">    button.pack(side=RIGHT)</span><br><span class="line">    entry.pack(side=RIGHT)</span><br><span class="line"></span><br><span class="line">    top.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;System Starting......&#x27;</span>)</span><br><span class="line">    <span class="built_in">all</span> = get_link()</span><br><span class="line">    link = <span class="built_in">all</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">id</span> = <span class="built_in">all</span>[<span class="number">1</span>]</span><br><span class="line">    chose = get_song(link, <span class="built_in">id</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;All Done.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tkin_canvas()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也没多少，80多行，轻轻松松。<br>搞完了这个，以后再来个进阶的，不断进步，积极进取！</p>]]></content>
      
      
      <categories>
          
          <category> 🛫万年鲲鹏号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🐍Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网易云音乐直链</title>
      <link href="/article/2118472832/"/>
      <url>/article/2118472832/</url>
      
        <content type="html"><![CDATA[<p>网易云音乐有很多方法可以获取直链，但这些方法要么很快失效，要么有缓存时间。</p><p>以下提供的方法简单、快捷并且直到现在依然可用。已经稳定几年了，网易云音乐外链用官方的就好。</p><p>（凡是网易云音乐可以正常试听的均可以直链，因为版权原因或其他原因无法试听的也无法外链。）<br><span id="more"></span><br><img src="https://cdn.jsdelivr.net/gh/2501070055/PIC/usr/uploads/2021/02/2025864149.jpg" alt=""></p><h4 id="标题这里需要用到网易云音乐提供的直链-api："><a href="#标题这里需要用到网易云音乐提供的直链-api：" class="headerlink" title="标题这里需要用到网易云音乐提供的直链 api："></a>标题这里需要用到网易云音乐提供的直链 api：</h4><p><code>https://music.163.com/song/media/outer/url?id=xxx.mp3</code></p><p>这里的 <code>id=xxx.mp3</code> 是根据你需要的歌曲的 ID 进行更改。</p><h4 id="标题例如：歌曲：纵容-Capper"><a href="#标题例如：歌曲：纵容-Capper" class="headerlink" title="标题例如：歌曲：纵容 / Capper"></a>标题例如：歌曲：纵容 / Capper</h4><p><code>https://music.163.com/#/song?id=1819970423</code></p><h4 id="标题修改为："><a href="#标题修改为：" class="headerlink" title="标题修改为："></a>标题修改为：</h4><p><code>https://music.163.com/song/media/outer/url?id=1819970423.mp3</code></p><h4 id="标题-DEMO-演示"><a href="#标题-DEMO-演示" class="headerlink" title="标题 DEMO 演示"></a>标题 DEMO 演示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;</span><br><span class="line">&lt;audio controls=&quot;controls&quot;&gt;</span><br><span class="line">  &lt;source src=&quot;/i/song.ogg&quot; type=&quot;audio/ogg&quot;&gt;</span><br><span class="line">  &lt;source src=&quot;https://music.163.com/song/media/outer/url?id=1816006982.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</span><br><span class="line">Your browser does not support the audio element.</span><br><span class="line">&lt;/audio&gt;</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><!-- CloudCalendar --><div class="widget-wrap" style="width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;"><div class="widget" id="CloudCalendar"></div></div>]]></content>
      
      
      <categories>
          
          <category> 🛸青铜时代号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📡Technology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Jieba库</title>
      <link href="/article/2176063644/"/>
      <url>/article/2176063644/</url>
      
        <content type="html"><![CDATA[<h2 id="1-jieba-的江湖地位"><a href="#1-jieba-的江湖地位" class="headerlink" title="1. jieba 的江湖地位"></a><strong>1. jieba 的江湖地位</strong></h2><p>NLP（自然语言）领域现在可谓是群雄纷争，各种开源组件层出不穷，其中一支不可忽视的力量便是 jieba 分词，号称要做最好的 Python 中文分词组件。<br><span id="more"></span><br><img src="https://pic1.zhimg.com/v2-144f02ac2b50ee5841fb2bee3fa36948_r.jpg" alt=""></p><p>“最好的” 这三个字可不是空穴来风，jieba 在开源社区的受欢迎程度非常之高。</p><p>jieba 项目目前的 github star 数已经达到 24k，其他热门分词组件像 HanLP star 数 20k、ansj_seg star 数 5.6k、pkuseg-python star 数 5k。可见 jieba 已经稳居中文分词领域 c 位。</p><p><img src="https://pic4.zhimg.com/v2-a46b69b27e9cdd27460ef7521de90de7_r.jpg" alt=""></p><p>jieba 的主要功能是做中文分词，可以进行简单分词、并行分词、命令行分词，当然它的功能不限于此，目前还支持关键词提取、词性标注、词位置查询等。</p><p>更让人愉悦的是 jieba 虽然立足于 python，但同样支持其他语言和平台，诸如：C++、Go、R、Rust、Node.js、PHP、 iOS、Android 等。所以 jieba 能满足各类开发者的需求。</p><h2 id="2-如何学-jieba"><a href="#2-如何学-jieba" class="headerlink" title="2. 如何学 jieba"></a><strong>2. 如何学 jieba</strong></h2><p>据我所知，jieba 最靠谱的文档是 github 项目的 readme，因为它似乎还没有独立的使用文档。但由于使用起来简单，看 readme 也能快速上手。</p><p><em><a href="https://github.com/fxsjy/jieba">Jieba库的Github地址</a></em></p><p>国内各大博客有关于 jieba 的使用教程，但需要甄别下准确度和时效性，因为 jieba 项目一直在更新。</p><p>当然本文不是纯粹的种草文章，会简单介绍下 jieba 的使用方法。</p><h2 id="3-安装-jieba"><a href="#3-安装-jieba" class="headerlink" title="3. 安装 jieba"></a><strong>3. 安装 jieba</strong></h2><p>jieba 支持<code>pip</code>或者<code>conda</code>安装，直接在命令行执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jieba</span><br></pre></td></tr></table></figure><p>不出意外，应该能很快安装好。</p><p><img src="https://pic2.zhimg.com/v2-154d371fe8a4e1dd06829913b88c04a9_r.jpg" alt=""></p><p>你也可以下载 jieba 安装包再安装，jieba 的 pypi 地址：</p><p><em><a href="http://pypi.python.org/pypi/jieba/">Pypi地址</a></em></p><h2 id="4-分词初体验"><a href="#4-分词初体验" class="headerlink" title="4. 分词初体验"></a><strong>4. 分词初体验</strong></h2><p>分词是 NLP 处理的第一步，也是最基本的任务，分词的好坏直接决定了后面语义分析的精准度。</p><p>所谓分词就是将一段表述里的词汇进行分解，比如 “我爱中国”，分解后有三个词：我、爱、中国，词性分别是名词、动词、名词。</p><p>jieba 库中用于分词的方法有三个：</p><h3 id="jieba-cut"><a href="#jieba-cut" class="headerlink" title="jieba.cut"></a><strong>jieba.cut</strong></h3><p>给定中文字符串，分解后返回一个迭代器，需要用 for 循环访问。</p><p>参数解释：  </p><p><strong>「strs」</strong>： 需要分词的字符串；<br><strong>「cut_all」</strong>：用来控制是否采用全模式；<br><strong>「HMM」</strong>：用来控制是否使用 HMM 模型；<br><strong>「use_paddle」</strong>：用来控制是否使用 paddle 模式下的分词模式，paddle 模式采用延迟加载方式，通过 enable_paddle 接口安装 paddlepaddle-tiny，并且 import 相关代码；  </p><p>这里区分全模式和精确模式，举个例子先看看区别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 全模式</span><br><span class="line">seg_list = jieba.cut(&quot;中国上海是一座美丽的国际性大都市&quot;, cut_all=True)</span><br><span class="line">print(&quot;Full Mode: &quot; + &quot;/ &quot;.join(seg_list))  </span><br><span class="line"></span><br><span class="line"># 返回结果</span><br><span class="line">Full Mode: 中国/ 上海/ 是/ 一座/ 美丽/ 的/ 国际/ 国际性/ 大都/ 大都市/ 都市</span><br><span class="line"></span><br><span class="line"># 精确模式</span><br><span class="line">seg_list = jieba.cut(&quot;中国上海是一座美丽的国际性大都市&quot;, cut_all=False)</span><br><span class="line">print(&quot;Full Mode: &quot; + &quot;/ &quot;.join(seg_list))  </span><br><span class="line"></span><br><span class="line"># 返回结果</span><br><span class="line">Default Mode: 中国/ 上海/ 是/ 一座/ 美丽/ 的/ 国际性/ 大都市</span><br></pre></td></tr></table></figure><p>可以看到，全模式把句子中所有的可以成词的词语都扫描出来, 会出现一词多用、一词多意。精确模式将句子最精确的切分开，每个词都只有一种含义。</p><p><code>jieba.cut</code>方法默认是精确模式。</p><p>还有一个参数控制 paddle 模式，会更加精确，使用这个的前提是你需要先安装 paddlepaddle-tiny。  </p><p>安装命令：<br><code>pip install paddlepaddle-tiny==1.6.1</code></p><p>详情可以去官网看下，这里不举例。</p><h3 id="jieba-cut-for-search"><a href="#jieba-cut-for-search" class="headerlink" title="jieba.cut_for_search"></a><strong>jieba.cut_for_search</strong></h3><p>该方法和 cut 一样，分解后返回一个迭代器，需要用 for 循环访问。不过它是搜索引擎模式，在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。</p><p>参数解释：</p><p><strong>「strs」</strong>：需要分词的字符串；<br><strong>「HMM」</strong>：是否使用 HMM 模型，默认值为 True。该方法适合用于搜索引擎构建倒排索引的分词，粒度比较细。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 搜索引擎模式</span><br><span class="line">seg_list = jieba.cut_for_search(&quot;中国上海是一座美丽的国际性大都市，拥有复旦大学、上海交通大学等知名高等学府&quot;)  </span><br><span class="line">print(&quot;, &quot;.join(seg_list))</span><br><span class="line"></span><br><span class="line"># 返回结果</span><br><span class="line">Search Mode: 中国, 上海, 是, 一座, 美丽, 的, 国际, 国际性, 大都, 都市, 大都市, ，, 拥有, 复旦, 大学, 复旦大学, 、, 上海, 交通, 大学, 上海交通大学, 等, 知名, 高等, 学府, 高等学府</span><br></pre></td></tr></table></figure><h3 id="jieba-lcut"><a href="#jieba-lcut" class="headerlink" title="jieba.lcut"></a><strong>jieba.lcut</strong></h3><p>和<code>jieba.cut</code>使用方法一样，不过返回的是列表。</p><p>cut 和 cut_for_search 方法都是支持繁体字的。</p><h2 id="5-添加自定义词典"><a href="#5-添加自定义词典" class="headerlink" title="5. 添加自定义词典"></a><strong>5. 添加自定义词典</strong></h2><p>如果是对专业新闻或者小说进行分词，会有很多的新词汇，jieba 库里没有就没办法识别，那么就需要添加自定义的词汇，比如：奥利给。</p><p>添加自定义词汇的方法： <code>jieba.load_userdict(file_name)</code> 参数是文本文件，txt、csv 都可以。</p><p>自定义词典文件的词汇格式是一个词占一行，每一行分三部分：词语、词频（可省略）、词性（可省略），用空格隔开，顺序不可颠倒。 比如：</p><p><img src="https://pic3.zhimg.com/v2-006e9b57a6f284ddce4f14314b8caa7a_b.jpg" alt=""></p><p>以 “奥利给，管虎执导的八佰是一部让人热血沸腾的好电影。” 这段话为例， 如果不添加自定义词典，很多词没办法识别出来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 不添加自定义词典</span><br><span class="line">seg_list = jieba.cut(&quot;奥利给，管虎执导的八佰是一部让人热血沸腾的好电影&quot;)</span><br><span class="line">print(&quot;/ &quot;.join(seg_list))  </span><br><span class="line"></span><br><span class="line"># 返回结果</span><br><span class="line">奥利/ 给/ ，/ 管虎/ 执导/ 的/ 八佰是/ 一部/ 让/ 人/ 热血沸腾/ 的/ 好/ 电影</span><br></pre></td></tr></table></figure><p>添加自定义词典后，新词、人名、电影名都可以识别出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 载入词典</span><br><span class="line">jieba.load_userdict(&quot;dict.txt&quot;)</span><br><span class="line">seg_list = jieba.cut(&quot;奥利给，管虎执导的八佰是一部让人热血沸腾的好电影&quot;)</span><br><span class="line">print(&quot;/ &quot;.join(seg_list))  </span><br><span class="line"></span><br><span class="line"># 返回结果</span><br><span class="line">奥利给/ ，/ 管虎/ 执导/ 的/ 八佰/ 是/ 一部/ 让/ 人/ 热血沸腾/ 的/ 好/ 电影</span><br></pre></td></tr></table></figure><h2 id="6-结论"><a href="#6-结论" class="headerlink" title="6. 结论"></a><strong>6. 结论</strong></h2><p>jieba 无疑是一款优秀的分词工具，而且在不断地优化成长。前面讲了一些基本的使用，大家还可以尝试使用停用词、提取关键词、词性标注、词位置查询等功能，也是十分的便捷。</p>]]></content>
      
      
      <categories>
          
          <category> 🛫万年鲲鹏号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🐍Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>散学以后</title>
      <link href="/article/400548830/"/>
      <url>/article/400548830/</url>
      
        <content type="html"><![CDATA[<p>花费一学期的时间，学习的知识，在两天内用尽心血在一张试卷上呈现，说起来有点夸张，但确是这样。</p><p>在2022年1月6日，我们数学考试结束后，全班都仿佛一锅烧开的热水，沸腾了。</p><p>听到那一声悦耳放学铃，我冲出教室，“畏罪潜逃”。冲进了学校附近的Mixue Ice Cream。</p><p>喝着新鲜的柠檬水，看着书，好不痛快。<br>过了一会，几乎全班人都到了。<br>全是人。好挤。😑<br>有什么办法？忍吧。忍忍就过去了。</p>]]></content>
      
      
      <categories>
          
          <category> 🪁哥伦比亚号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📓日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客公告</title>
      <link href="/article/744616242/"/>
      <url>/article/744616242/</url>
      
        <content type="html"><![CDATA[<h1 id="Updated-Blog-at-2022-02-12-21-43"><a href="#Updated-Blog-at-2022-02-12-21-43" class="headerlink" title="Updated Blog at 2022/02/12 21:43"></a>Updated Blog at 2022/02/12 21:43</h1><p>好久不见，新年快乐！好久都颓废没更文章了，没想到我换了域名吧！<br>本次更新主要更新了些……</p><ol><li>看板娘的CDN：以前是使用Akilar大佬的CDN，发现还是有问题，就上网找了个稳定的，但只是换了个CDN，还是没有启用看板娘……<del>那有啥用啊!!!</del></li><li>侧边栏位置更换: 从右边换到左边嘛，没什么好说的。</li><li>随机图API: 哎嘿，重头戏来了。访问<code>https://api.nikoblog.top/api</code>，按照电脑还是手机返回相应大小的壁纸，图片都是压缩过的哈，但是PHP性能不太行，大佬能出招帮小弟整C++版吗？😙<h3 id="现在有自然灾害-——-开学，我不得不逃难去了，几乎不会更新了，各位すみません！等我渡劫归来！"><a href="#现在有自然灾害-——-开学，我不得不逃难去了，几乎不会更新了，各位すみません！等我渡劫归来！" class="headerlink" title="现在有自然灾害 —— 开学，我不得不逃难去了，几乎不会更新了，各位すみません！等我渡劫归来！"></a>现在有自然灾害 —— 开学，我不得不逃难去了，几乎不会更新了，各位すみません！等我渡劫归来！</h3><strong>每日金句</strong>: 还有一天就开学了😭<span class="hide-inline"><button type="button" class="hide-button" style="">下一句？  </button><span class="hide-content">要抓紧时间颓废了😏</span></span></li></ol><h1 id="Updated-Blog-at-2022-01-24-14-56"><a href="#Updated-Blog-at-2022-01-24-14-56" class="headerlink" title="Updated Blog at 2022/01/24 14:56"></a>Updated Blog at 2022/01/24 14:56</h1><p>终于发现了以前博客为什么加载那么慢了，原来是<code>圆角</code>！<br>文章的透明效果也是因为以前没认真看教程，以为会遮挡背景(本博客是根据Akilar的“每页都使用不同的自定义的背景”方案)。现在好了。</p><p>本次更新主要优化了性能、美化了界面，也更新了我的大脑。“我以后再也不美化啦！”<br>图片？想多了。现在你们看到的不就是吗？反正我以后不会改了……</p><h1 id="Updated-Blog-at-2022-1-14-21-41"><a href="#Updated-Blog-at-2022-1-14-21-41" class="headerlink" title="Updated Blog at 2022/1/14 21:41"></a>Updated Blog at 2022/1/14 21:41</h1><p>本次更新更换了网站主题，由<strong>Next</strong>转为<strong>Butterfly</strong><br><a class="btn-beautify blue larger" href="https://gitee.com/immyw/hexo-theme-butterfly"   title="Butterfly主题Gitee地址"><i class="far fa-hand-point-right"></i><span>Butterfly主题Gitee地址</span></a></p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ol><li>优化博客访问速度，减少插件使用，尽量轻度搭建。</li><li>添加Live2d-Widget升级互动版看板娘(不是插件!)，美化一下嘛~</li></ol><p><img src="n.webp" alt="看板娘"></p><ol><li>添加吸底Aplayer音乐播放器，歌单为网易云歌单 ‘清华自习室 / 学习处方’ ，持续跟进。</li></ol><p><img src="a.webp" alt="Aplayer"></p><ol><li>添加双评论系统,<strong>Gitalk</strong>和<strong>Twikoo</strong> </li></ol><p><img src="desktop.webp" alt="Twikoo"></p><ol><li>添加在线聊天系统<mark class="hl-label blue">TiDio</mark> ，恶搞翻译。</li></ol><p><img src="gan.webp" alt="TiDio"></p><h2 id="各个页面展示"><a href="#各个页面展示" class="headerlink" title="各个页面展示"></a>各个页面展示</h2><p><img src="jie.webp" alt="主页"><br><img src="ye.webp" alt="友链页"><br><img src="l.webp" alt="相册(图床)"></p><h3 id="欢迎来到我的博客"><a href="#欢迎来到我的博客" class="headerlink" title="欢迎来到我的博客"></a>欢迎来到我的博客</h3><a class="btn-beautify orange larger" href="https://niko-karen.gtihub.io"   title="我的博客"><i class="far fa-hand-point-right"></i><span>我的博客</span></a>]]></content>
      
      
      <categories>
          
          <category> 🛩️蓝色空间号 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一日奇遇</title>
      <link href="/article/c0d23e63/"/>
      <url>/article/c0d23e63/</url>
      
        <content type="html"><![CDATA[<div class="note red icon simple"><i class="note-icon fas fa-exclamation-circle"></i><p>这篇文章是初建博客时写的，文笔稚嫩，还没写完，吾会尽力完成。<br>另外，文中的图书馆现在已经成为旧图书馆。</p></div><p>前文P.S : 这篇文章巨多灾难，第一次被覆盖，第二次被删除。难受 :(</p><p>在星期六的一个万里乌云、阳光明媚、晴空万里的日子里，本该安安稳稳地在家辛苦码字，但<code>学习</code>的欲望提醒了我。经过一番认真的整理后，我踏上了<del>战场</del>。</p><p><img src="j.webp" alt="旧图书馆"></p><p>到达图书馆，但又未完全到达。因为疫情还很严重，我还需经过层层关卡、过五关斩六将，才能真正<del>救出公主</del>进入内，更何况现在是假日，有很多人和我们一样，也在排队扫码。<br>十分钟后，我扫完码入内后，首先冲的是少儿馆，<psw>其实我是去看成人馆，</psw>先进去还书。走进去之前，还要登记信息，那我就上吧……<br>“我要<psw>强奸</psw>你!”一个女声，对另一个女生说。这可把我吓得……咋俩女的还说这话，心脏病都要出来了。</p>]]></content>
      
      
      <categories>
          
          <category> 🪁哥伦比亚号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📓日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思</title>
      <link href="/article/40513/"/>
      <url>/article/40513/</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>​    今天我放学回家时看到了许多令我个人感受良深的事物</p><p>​    可能因为我是个男生，许多人认为我不在意这些花花草草，实际上我表面上是这样，但……</p><p>​    我很关心那些可怜的事物。</p><span id="more"></span><hr><h2 id="2-事例"><a href="#2-事例" class="headerlink" title="2.事例"></a>2.事例</h2><p>​        (1)  每次家里来了爷爷奶奶养的鸡或鸭时，我都格外在意它们，甚至夜深人静时都去看它们，生怕它们哪天被**了。在这不久前，就来了一只鸡和鸭，它们都只存在了两天，在我去上课一段时间内，它们已成为了桌上菜。我心有余悸，在那次，我掩藏了十二年的心性被知道了，自那以后，我爸妈都知道了我不是冷血动物。</p><p>​        (2)  在某一年的暑假期间，我去了一趟北京，在逛街时，我看到了一位双腿截肢的老婆婆，她匍匐在推车上，用一块木板写上了向人乞讨的话语，但是没有一个人愿意施舍几枚硬币让她吃顿饱饭，仅仅只是将它看成了一位无用的过路人，冷眼旁观。只有我一个人一直看着她，看着她缓慢地，艰难地用手推着车走。我没有能力帮助她，我也没有胆量向其他人请求、向父母请求几元钱帮助她。我先天懦弱，很好强，无法在他人面前露出本性。</p><p>​        (3)  在今天，我看到了一只全身黑毛的流浪猫，我望着它，它也望着我，我俩对视了一分钟，后来，我实在忍受不了，疾步跑回了家，在我的密码日记本上，写上了一句话，并牢记在心，永远。</p><p><img src="n.webp" style="zoom:80%;" /></p><hr><h2 id="3-最后"><a href="#3-最后" class="headerlink" title="3.最后"></a>3.最后</h2><p>​    最终到了六年级时，我才不那么懦弱、无能，也能释放心中的压力了。</p><p>​    这是我第一次将这些事公之于众，同时也释放了在心中压了十二年的大石，得以释然。</p>]]></content>
      
      
      <categories>
          
          <category> 🛩️蓝色空间号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🤔感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的旅行日记</title>
      <link href="/article/383940238/"/>
      <url>/article/383940238/</url>
      
        <content type="html"><![CDATA[<h1 id="增城一行"><a href="#增城一行" class="headerlink" title="增城一行"></a><strong>增城一行</strong></h1><p>就在昨天,我们到了我的外婆家——-增城.</p><p>那是一个美丽的地方,但总有些美中不足.</p><span id="more"></span><p><img src="zeng.webp" alt=""></p><h2 id="Bad-Side"><a href="#Bad-Side" class="headerlink" title="Bad Side"></a>Bad Side</h2><ol><li>到处乱装修.</li></ol><p>为什么这样说? 主要还是因为附近总有新房子,别墅当初都是,导致房地产中介赚的盆满钵满。</p><ol><li>过于现代</li></ol><p>嗯? 现代不好吗? 并不是这么说,而只是我不太喜欢过于喧闹的生活，我更喜欢诗歌中的那种隐居生活，这也像我的性格:不太爱说话。</p><h2 id="Good-Side"><a href="#Good-Side" class="headerlink" title="Good Side"></a>Good Side</h2><ol><li>足够方便,便利</li></ol><p>嗯.这确实是增城的优点,也是增城的优势。<br>因为现代所以便利。因为便利所以繁荣。</p><ol><li>美丽</li></ol><p>就像图片那样，我也见到了这花木繁茂、蓝天白云的增城，这是足以让人心神向往的，如果只是这张图片，还不足以表现增城的美。当然，以我那差得不得了的写作水平描写不出，大家可以自己去看看。</p>]]></content>
      
      
      <categories>
          
          <category> 🚁无限边疆号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🧳旅行 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
